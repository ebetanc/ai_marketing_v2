{
  "name": "real-estate-content",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/maxcopell~zillow-detail-scraper/run-sync-get-dataset-items",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"extractBuildingUnits\": \"all\",\n    \"startUrls\": [\n        {\n            \"url\": \"{{ $json.houseURL }}\",\n            \"method\": \"GET\"\n        }\n    ]\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-560, 512],
      "id": "2ee143b4-138a-4bb3-bd68-5ad31a83886e",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Zo2uUAaaY96MHvge",
          "name": "Apify API"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dbdf32c6-8b16-453b-8c29-87b1f634b4b8",
              "name": "houseURL",
              "value": "={{ $json.body.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-784, 512],
      "id": "9b917375-13cd-4604-a95f-543b5c8dbe6f",
      "name": "Set House URL"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "121c1a37-9b2b-4091-8de5-1cdf45a973f5",
              "name": "address",
              "value": "={{ $json.address.streetAddress }}, {{ $json.address.city }}{{ $json.address.state }}, {{ $json.address.zipcode }}",
              "type": "string"
            },
            {
              "id": "50475706-a8e2-442e-b970-485076786fee",
              "name": "price",
              "value": "=${{ $json.price }}",
              "type": "string"
            },
            {
              "id": "bcb772a6-f48d-4931-abf6-756bf17ffccc",
              "name": "bedrooms",
              "value": "={{ $json.bedrooms }}",
              "type": "string"
            },
            {
              "id": "1e040e0c-f9b2-4a4a-8fe3-a83783938f1b",
              "name": "bathrooms",
              "value": "={{ $json.bathrooms }}",
              "type": "string"
            },
            {
              "id": "aae1bfab-1d9f-4037-9cf9-3ceff795f7fa",
              "name": "size",
              "value": "={{ $json.adTargets.sqft }} sqft",
              "type": "string"
            },
            {
              "id": "34c9069e-6830-46c8-baec-e987a68cdc79",
              "name": "description",
              "value": "={{ $json.description }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-336, 512],
      "id": "de80a650-ed1b-4c0f-ae4b-977cc4f6be93",
      "name": "Set House Info"
    },
    {
      "parameters": {
        "jsCode": "const originalPhotos = $('HTTP Request').first().json.originalPhotos || [];\nconst output = [];\n\nfor (const photo of originalPhotos) {\n    const jpegList = photo?.mixedSources?.jpeg || [];\n    if (Array.isArray(jpegList) && jpegList.length > 0) {\n        // ONLY pick jpeg with width 1536\n        const bestImage = jpegList.find(img => img.width === 1536);\n        if (bestImage) {\n            output.push({\n                json: {\n                    url: bestImage.url,\n                    width: bestImage.width\n                }\n            });\n        }\n    }\n}\n\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-48, -16],
      "id": "8b7eba2a-0b45-466b-89a3-ef314a55b772",
      "name": "Get Image URLs"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [144, -16],
      "id": "13f95ad7-1038-42b3-9474-2374b2d7bc02",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/upload/v1beta/files",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googlePalmApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Upload-Command",
              "value": "start, upload, finalize"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Length",
              "value": "=123"
            },
            {
              "name": "X-Goog-Upload-Header-Content-Type",
              "value": "image/png"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [544, 192],
      "id": "2859e1ef-6767-4af0-befa-544ce2300b53",
      "name": "Upload to Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "yZqSPHJ44wHqFBp1",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googlePalmApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"fileData\": {\n            \"fileUri\": \"{{ $('Upload to Gemini').item.json.file.uri }}\",\n            \"mimeType\": \"{{ $('Upload to Gemini').item.json.file.mimeType }}\"\n          }\n        },\n        {\n          \"text\": \"Describe this image in 1 short sentence.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"temperature\": 0.5,\n    \"topK\": 40,\n    \"topP\": 0.95,\n    \"maxOutputTokens\": 8192,\n    \"responseModalities\": [\"Text\"]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [912, 192],
      "id": "f0628087-5efa-46cd-a697-5b04f202ce99",
      "name": "Analyze image (description)",
      "credentials": {
        "googlePalmApi": {
          "id": "yZqSPHJ44wHqFBp1",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googlePalmApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"fileData\": {\n            \"fileUri\": \"{{ $('Upload to Gemini').item.json.file.uri }}\",\n            \"mimeType\": \"{{ $('Upload to Gemini').item.json.file.mimeType }}\"\n          }\n        },\n        {\n          \"text\": \"Describe this image as one of the following keywords: front house, livingroom, kitchen, bedroom, bathroom, backyard, other. Only reply with one of these keywords.\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"temperature\": 0.5,\n    \"topK\": 40,\n    \"topP\": 0.95,\n    \"maxOutputTokens\": 8192,\n    \"responseModalities\": [\"Text\"]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 192],
      "id": "10627fd8-be04-4432-8fad-126e5284b3d4",
      "name": "Analyze image (keyword)",
      "credentials": {
        "googlePalmApi": {
          "id": "yZqSPHJ44wHqFBp1",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [320, 192],
      "id": "e7a55244-88a9-4d24-a962-bc6b469051c7",
      "name": "Get Image"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "857bdc00-c0d6-4529-89c0-8da0c9d22cba",
              "name": "ImageURL",
              "value": "={{ $('Get Image').item.json.url }}",
              "type": "string"
            },
            {
              "id": "baaaa9a0-7295-48e4-a36a-32b42f634fc0",
              "name": "ImageDesc",
              "value": "={{ $('Analyze image (description)').item.json.candidates[0].content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "0f202301-c284-43eb-860d-dc7e4ed9d5f7",
              "name": "ImageKeyword",
              "value": "={{ $json.candidates[0].content.parts[0].text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1328, 192],
      "id": "11c220d5-93aa-4936-aea4-90cf42883414",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "imgInfo",
        "include": "specifiedFields",
        "fieldsToInclude": "ImageURL, ImageDesc, ImageKeyword",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [1488, 192],
      "id": "8f339283-afc7-4332-887a-201304311b59",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "imgInfo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [320, -16],
      "id": "75983eb8-d4b8-4d14-8507-fc3ef5e6c29a",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Read this list of images with their descriptions and keywords\n\nPick the best 6 ones and reply as a JSON list via user message\n\nThings to keep in mind:\n-The 1st image you pick will be the best one with \"front house\" keyword\n-The 2nd image you pick will be the best with the keyword \"livingroom\"\n-The 3rd image you pick will be the best with the keyword \"kitchen\"\n-The 4th image you pick will be the best with the keyword \"bedroom\"\n-The 5th image you pick will be the best with the keyword \"bathroom\"\n-The 6th image you pick will be the best with the keyword \"backyard\"\n\nHere is the list {{ JSON.stringify($json.imgInfo) }}\n\nPlease make sure you type the correct urls, double check.\n\nExample of good output in order:\n\n{\n  \"sixImages\": [\n  \"https://example.com/image1.jpg\",\n  \"https://example.com/image2.jpg\",\n  \"https://example.com/image3.jpg\",\n  \"https://example.com/image4.jpg\",\n  \"https://example.com/image5.jpg\",\n  \"https://example.com/image6.jpg\"\n  \n  ]\n}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [544, -16],
      "id": "80e292b4-2aa6-49f5-9fab-89e454053342",
      "name": "Best Images",
      "credentials": {
        "openAiApi": {
          "id": "U46LK5mxeA2mY2dB",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "message.content.sixImages",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [912, -16],
      "id": "294df889-911c-43bf-b0e4-988f46c47eeb",
      "name": "Split Out"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://no-code-architects-toolkit-905445295658.europe-west1.run.app/v1/image/convert/video",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"image_url\": \"{{ $json['message.content.sixImages'] }}\",\n    \"length\": 5,\n    \"frame_rate\": 30,\n    \"zoom_speed\": 1.9,\n    \"id\": \"request-123\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, -16],
      "id": "d5b022a2-176a-433c-be6f-8a63ec924ad2",
      "name": "Image to Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "LZV85cG9VUtzglj9",
          "name": "NCA Toolkit Credential"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://no-code-architects-toolkit-905445295658.europe-west1.run.app/v1/ffmpeg/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"inputs\": [\n    {\n      \"file_url\": \"{{ $json.response }}\",\n      \"options\": []\n    }\n  ],\n  \"filters\": [\n    {\n      \"filter\": \"color=c=white:s=1080x1920:d=5[bg];[0:v]scale=iw*1.05:ih*1.05:force_original_aspect_ratio=decrease[scaled];[bg][scaled]overlay=(W-w)/2:250[outv]\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"options\": [\n        {\n          \"option\": \"-map\",\n          \"argument\": \"[outv]\"\n        },\n        {\n          \"option\": \"-c:v\",\n          \"argument\": \"libx264\"\n        },\n        {\n          \"option\": \"-crf\",\n          \"argument\": \"23\"\n        },\n        {\n          \"option\": \"-preset\",\n          \"argument\": \"medium\"\n        },\n        {\n          \"option\": \"-y\"\n        }\n      ],\n      \"format\": \"output.mp4\"\n    }\n  ],\n  \"id\": \"vertical-layout-task\"\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 3,
              "batchInterval": 1500
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1328, -16],
      "id": "b15661ba-2d89-4847-afdd-dac843acbdef",
      "name": "Convert to Vertical",
      "retryOnFail": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "LZV85cG9VUtzglj9",
          "name": "NCA Toolkit Credential"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ba3f1838-1275-4fa4-a5ad-7100ea19c9c4",
              "name": "videoURL",
              "value": "={{ $json.response[0].file_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1792, 192],
      "id": "b5508a5f-c878-427e-9020-b3c5730f2e95",
      "name": "Set Video URLs"
    },
    {
      "parameters": {
        "fieldToSplitOut": "message.content.titles",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [512, 624],
      "id": "d07a3059-1aa2-4e77-820f-fc4d0f762e06",
      "name": "Split Titles"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Create some titles that will be overlayed on a video.\n\nINFO:\nHere is the description of the house:\n\"{{ $json.description }}\"\n\nHere is some additional information:\n{{ $json.bedrooms }} bedrooms, {{ $json.bathrooms }} bathrooms, {{ $json.size }} size, located on {{ $json.address }}, listed at {{ $json.price }}.\n\nYou will create 6 titles, since the final video will consist of 6 clips.\n\nNow please read that information and create a title for each of the parts. For the first part just include the city and state, for the second just include an adjective for the living room (eg. beautiful living room), for the third just include “kitchen”, for the fourth just include the quantity of bedrooms, for the fifth part just include the quantity of bathrooms, and for the sixth part just include the price. For each caption max 2 words. Produce JSON via User Message.\n\nExample JSON structure output:\n{\n  \"titles\": [\n    \"First part of script goes here.\",\n    \"Second part here.\",\n    \"third part here.\",\n    \"Fourth part here.\",\n    \"Fifth part here.\",\n    \"Sixth part here.\"\n  ]\n}\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [160, 624],
      "id": "a591c864-9fc8-40f2-aca5-975f69c30a44",
      "name": "Create Titles",
      "credentials": {
        "openAiApi": {
          "id": "Dd9LWWgVSUeqLvEW",
          "name": "Ai-gent Lab Project"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86873f50-6ce2-4deb-8b6e-e34ba8301492",
              "name": "textOverlay",
              "value": "={{ $json['message.content.titles'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1792, 624],
      "id": "62707746-d640-4e1a-b9a5-2ec5e56eab41",
      "name": "Text Overlay"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Create a short video voiceover for a real estate property house.\n\nHere is the description of the house:\n\"{{ $json.description }}\"\n\nHere is some additional information:\n{{ $json.bedrooms }} bedrooms, {{ $json.bathrooms }} bathrooms, {{ $json.size }} size, located on {{ $json.address }}, listed at {{ $json.price }}.\n\nYour script should consist of 6 parts, and the length of each part should equal to 5 talking seconds so maximum 10 words (IMPORTANT). Make every part a cohesive sentence.\n\nFirst part: Briefly introduce the house with a fun fact about it (don’t mention the address)\nSecond part: Highlight living room\nThird part: Highlight kitchen\nFourth part: Highlight bedrooms and amount\nFifth part: Highlight bathrooms and amount\nSixth part: Mention the price (please write it out not as a number but as words, because the TTS tool gets confused with numbers) and have a call-to-action like “contact me now!”\n\nUse only the information provided. Avoid assumptions or additional details not explicitly mentioned. Be objective and avoid subjective language or inferred qualities.\n\nOnly reply with the script, in a list. It should be in an array in JSON format via User Message.\n\nExample JSON structure output:\n{\n  \"script\": [\n    \"First part of script goes here.\",\n    \"Second part here.\",\n    \"Third part here.\",\n    \"Fourth part here.\",\n    \"Fifth part here.\",\n    \"Sixth part here.\"\n  ]\n}\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [160, 912],
      "id": "a1e71c02-5d2d-4ff7-830c-8ab44fb51051",
      "name": "Generate Script",
      "credentials": {
        "openAiApi": {
          "id": "Dd9LWWgVSUeqLvEW",
          "name": "Ai-gent Lab Project"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "message.content.script",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [528, 912],
      "id": "284421f7-f7d3-4402-bd5e-4eb2c7e53223",
      "name": "Split Script"
    },
    {
      "parameters": {
        "resource": "audio",
        "model": "tts-1-hd",
        "input": "={{ $json['message.content.script'] }}",
        "options": {
          "speed": 1.1,
          "binaryPropertyOutput": "data"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [752, 912],
      "id": "2237f01a-6a96-405c-99f8-f92a87b70898",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "Dd9LWWgVSUeqLvEW",
          "name": "Ai-gent Lab Project"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "22b905d7-9630-4e2c-acd0-9b2001f1ccbc",
              "name": "audioURL",
              "value": "=https://drive.google.com/uc?export=download&id={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1792, 912],
      "id": "9bdbb52b-c260-48bc-bb22-f6d201e3de4c",
      "name": "Set Audio URLs"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 3,
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [2080, 640],
      "id": "7af21edd-1d40-48ed-b594-827b3ebcb501",
      "name": "Merge"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [2320, 640],
      "id": "d0e73b82-56c5-41d3-ba21-1a533619d397",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://no-code-architects-toolkit-905445295658.europe-west1.run.app/v1/ffmpeg/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"inputs\": [\n    {\n      \"file_url\": \"{{ $json.videoURL }}\",\n      \"options\": []\n    },\n    {\n      \"file_url\": \"https://drive.google.com/uc?export=download&id=1pE9fYCWPIqR049kEaWOuWdNHroY-cfy4\",\n      \"options\": []\n    }\n  ],\n  \"filters\": [\n    {\n      \"filter\": \"[0:v]scale=1080:1920:force_original_aspect_ratio=increase,crop=1080:1920[top];color=c=white:s=1080x1920:d=5[canvas];[canvas][top]overlay=0:0[withvideo];[withvideo]drawtext=fontfile=fonts/Roboto-Bold.ttf:fontsize=70:fontcolor=white:x=(w-text_w)/2:y=1470:box=1:boxcolor=#008dd8:boxborderw=20:text='{{ $json.textOverlay }}':text_align=left[withtext];[1:v]scale=iw*0.3:ih*0.3:force_original_aspect_ratio=decrease[scaled_img];[withtext][scaled_img]overlay=(main_w-overlay_w)/2:160[outv]\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"options\": [\n        {\n          \"option\": \"-c:v\",\n          \"argument\": \"libx264\"\n        },\n        {\n          \"option\": \"-crf\",\n          \"argument\": 23\n        },\n        {\n          \"option\": \"-preset\",\n          \"argument\": \"fast\"\n        },\n        {\n          \"option\": \"-y\"\n        },\n        {\n          \"option\": \"-map\",\n          \"argument\": \"[outv]\"\n        },\n        {\n          \"option\": \"-map\",\n          \"argument\": \"0:a?\"\n        }\n      ],\n      \"format\": \"output.mp4\"\n    }\n  ],\n  \"id\": \"vertical-layout-task\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2480, 768],
      "id": "04326771-dbda-42c4-b054-e52018381aef",
      "name": "Add Text Overlay",
      "credentials": {
        "httpHeaderAuth": {
          "id": "LZV85cG9VUtzglj9",
          "name": "NCA Toolkit Credential"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://no-code-architects-toolkit-905445295658.europe-west1.run.app/v1/ffmpeg/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"inputs\": [\n    {\n      \"file_url\": \"{{ $json.response[0].file_url }}\",\n      \"options\": []\n    },\n    {\n      \"file_url\": \"{{ $('Loop Over Items1').item.json.audioURL }}\",\n      \"options\": []\n    }\n  ],\n  \"filters\": [\n    {\n      \"filter\": \"[0:v:0][1:a:0]concat=n=1:v=1:a=1[outv][outa]\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"options\": [\n        { \"option\": \"-map\", \"argument\": \"[outv]\" },\n        { \"option\": \"-map\", \"argument\": \"[outa]\" },\n        { \"option\": \"-c:v\", \"argument\": \"libx264\" },\n        { \"option\": \"-c:a\", \"argument\": \"aac\" }\n      ]\n    }\n  ],\n  \"id\": \"audio-overlay-task\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2640, 768],
      "id": "c0ea04e2-f4fe-4e47-9030-32822acb4cde",
      "name": "Add Audio Overlay",
      "credentials": {
        "httpHeaderAuth": {
          "id": "LZV85cG9VUtzglj9",
          "name": "NCA Toolkit Credential"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "response[0].file_url"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [2640, 624],
      "id": "fc30726a-1d89-437b-8796-f5e293d3776c",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://no-code-architects-toolkit-905445295658.europe-west1.run.app/v1/ffmpeg/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"inputs\": [\n    {\n      \"file_url\": \"{{ $json.file_url[0] }}\",\n      \"options\": []\n    },\n    {\n      \"file_url\": \"{{ $json.file_url[1] }}\",\n      \"options\": []\n    },\n    {\n      \"file_url\": \"{{ $json.file_url[2] }}\",\n      \"options\": []\n    },\n    {\n      \"file_url\": \"{{ $json.file_url[3] }}\",\n      \"options\": []\n    },\n    {\n      \"file_url\": \"{{ $json.file_url[4] }}\",\n      \"options\": []\n    },\n    {\n      \"file_url\": \"{{ $json.file_url[5] }}\",\n      \"options\": []\n    }\n  ],\n  \"filters\": [\n    {\n      \"filter\": \"[0:v:0][0:a:0][1:v:0][1:a:0][2:v:0][2:a:0][3:v:0][3:a:0][4:v:0][4:a:0][5:v:0][5:a:0]concat=n=6:v=1:a=1[outv][outa]\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"options\": [\n        {\n          \"option\": \"-map\",\n          \"argument\": \"[outv]\"\n        },\n        {\n          \"option\": \"-map\",\n          \"argument\": \"[outa]\"\n        },\n        {\n          \"option\": \"-c:v\",\n          \"argument\": \"libx264\"\n        },\n        {\n          \"option\": \"-c:a\",\n          \"argument\": \"aac\"\n        }\n      ],\n      \"format\": \"output.mp4\"\n    }\n  ],\n  \"id\": \"concat-task\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2944, 624],
      "id": "a04e7444-a633-454e-b4ca-f74bb5f3179c",
      "name": "Concatenate Videos",
      "credentials": {
        "httpHeaderAuth": {
          "id": "LZV85cG9VUtzglj9",
          "name": "NCA Toolkit Credential"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://no-code-architects-toolkit-905445295658.europe-west1.run.app/v1/ffmpeg/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"inputs\": [\n    {\n      \"file_url\": \"{{ $json.response[0].file_url }}\",\n      \"options\": []\n    },\n    {\n      \"file_url\": \"https://drive.google.com/uc?export=download&id=1bACtk-JU4OIPo9G_2pSw4YEKq7-ML9lh\",\n      \"options\": []\n    }\n  ],\n  \"filters\": [\n    {\n      \"filter\": \"[1:a:0]volume=0.07,apad[bg_music];[0:a:0][bg_music]amix=inputs=2:duration=first[outa]\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"options\": [\n        {\n          \"option\": \"-map\",\n          \"argument\": \"0:v:0\"\n        },\n        {\n          \"option\": \"-map\",\n          \"argument\": \"[outa]\"\n        },\n        {\n          \"option\": \"-c:v\",\n          \"argument\": \"libx264\"\n        },\n        {\n          \"option\": \"-c:a\",\n          \"argument\": \"aac\"\n        }\n      ],\n      \"format\": \"output.mp4\"\n    }\n  ],\n  \"id\": \"audio-overlay-task\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [3168, 624],
      "id": "68280bc4-2079-4c4e-8348-a8500d780865",
      "name": "Add Music",
      "credentials": {
        "httpHeaderAuth": {
          "id": "LZV85cG9VUtzglj9",
          "name": "NCA Toolkit Credential"
        }
      }
    },
    {
      "parameters": {
        "content": "# House Scrape\n",
        "height": 280,
        "width": 860
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-1056, 432],
      "id": "49d961af-1d95-4cb8-ba95-d76fc8806adf",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# 1.- Create House Clips",
        "height": 620,
        "width": 1700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-64, -96],
      "id": "92ee03d7-9ae9-43e6-80a5-791b3dd35bc4",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# 2.- Create Text Overlay",
        "height": 280,
        "width": 1700,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-64, 544],
      "id": "6a82cf14-a566-4c6f-acea-8ba1fc2db753",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# 3.- Create Audio Overlay",
        "height": 280,
        "width": 1700,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-64, 848],
      "id": "cfbf5b30-180f-4dbe-a28c-e04184918fc3",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# 4.- Set Clip URLs, Text Overlay and Audio Overlay\n",
        "height": 1220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1712, -96],
      "id": "9a9ac966-cfb5-4bf3-afed-52b09fce75d3",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Create Final Clips",
        "height": 420,
        "width": 780
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [2032, 560],
      "id": "5fd323a6-4193-437e-af62-a79a022ebcf8",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# Create Final Video",
        "height": 260,
        "width": 580,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [2832, 560],
      "id": "c912ad57-8351-466a-ba02-23ccc1e25e1b",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "name": "Generated Audio",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1AGAxBWxDnL1y2x_N18gwfrc6uCQ4DbXw",
          "mode": "list",
          "cachedResultName": "Real Estate Audio Generation",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1AGAxBWxDnL1y2x_N18gwfrc6uCQ4DbXw"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [960, 912],
      "id": "b2fafa95-d87d-4579-bf6f-2462e4915c6a",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "5EuLOlMq0xQghazT",
          "name": "Esteban Google Drive"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "real-estate-content",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [-1008, 512],
      "id": "f84101e7-3e06-4772-8014-ba99f3ed4bac",
      "name": "Webhook",
      "webhookId": "1776dcc3-2b3e-4cfa-abfd-0ad9cabaf6ea",
      "alwaysOutputData": false,
      "notesInFlow": false
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [3600, 624],
      "id": "fcd780ad-225e-4ea3-b28c-af99bc591663",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "tableId": "real_estate_content",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "link_origin",
              "fieldValue": "=url tes"
            },
            {
              "fieldId": "link_final",
              "fieldValue": "=url final"
            },
            {
              "fieldId": "owner_id",
              "fieldValue": "a28483ef-f236-468e-b114-3b2527076b20"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [3376, 624],
      "id": "b5260d91-9a86-4f5b-8688-d0323a8f01d8",
      "name": "Create a row",
      "credentials": {
        "supabaseApi": {
          "id": "cBT6cAc8Tl86X0wU",
          "name": "Supbase Marketing"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.srv856940.hstgr.cloud",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36",
            "content-length": "314",
            "accept": "*/*",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9,es;q=0.8,fr-FR;q=0.7,fr;q=0.6",
            "content-type": "application/json",
            "origin": "https://zp1v56uxy8rdx5ypatb0ockcb9tr6a-oci3--5173--96435430.local-credentialless.webcontainer-api.io",
            "priority": "u=1, i",
            "referer": "https://zp1v56uxy8rdx5ypatb0ockcb9tr6a-oci3--5173--96435430.local-credentialless.webcontainer-api.io/",
            "sec-ch-ua": "\"Not;A=Brand\";v=\"99\", \"Google Chrome\";v=\"139\", \"Chromium\";v=\"139\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "empty",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "cross-site",
            "x-client": "ai_marketing_v2",
            "x-env": "development",
            "x-forwarded-for": "92.145.49.28",
            "x-forwarded-host": "n8n.srv856940.hstgr.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "1e777b048e49",
            "x-real-ip": "92.145.49.28",
            "x-request-id": "2cb8fc92-ea96-4d37-b84a-500e99c3f6e5"
          },
          "params": {},
          "query": {},
          "body": {
            "identifier": "content_saas",
            "operation": "real_estate_ingest",
            "url": "https://www.zillow.com/homedetails/7258-W-Le-Baron-Ave-Las-Vegas-NV-89178/318351597_zpid/",
            "user_id": "a28483ef-f236-468e-b114-3b2527076b20",
            "meta": {
              "user_id": "a28483ef-f236-468e-b114-3b2527076b20",
              "source": "app",
              "ts": "2025-09-02T16:50:07.038Z"
            }
          },
          "webhookUrl": "https://n8n.srv856940.hstgr.cloud/webhook/1776dcc3-2b3e-4cfa-abfd-0ad9cabaf6ea",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Set House Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set House URL": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set House Info": {
      "main": [
        [
          {
            "node": "Generate Script",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Titles",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Image URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image URLs": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to Gemini": {
      "main": [
        [
          {
            "node": "Analyze image (description)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image (description)": {
      "main": [
        [
          {
            "node": "Analyze image (keyword)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image (keyword)": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image": {
      "main": [
        [
          {
            "node": "Upload to Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Best Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Best Images": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Image to Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image to Video": {
      "main": [
        [
          {
            "node": "Convert to Vertical",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to Vertical": {
      "main": [
        [
          {
            "node": "Set Video URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Video URLs": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Titles": {
      "main": [
        [
          {
            "node": "Text Overlay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Titles": {
      "main": [
        [
          {
            "node": "Split Titles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Overlay": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Generate Script": {
      "main": [
        [
          {
            "node": "Split Script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Script": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Audio URLs": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add Text Overlay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Text Overlay": {
      "main": [
        [
          {
            "node": "Add Audio Overlay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Audio Overlay": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Concatenate Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Concatenate Videos": {
      "main": [
        [
          {
            "node": "Add Music",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Set Audio URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set House URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Music": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4fbd79ae-41cc-4228-bb6a-73ca9ad5a50c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fe9d3a12f258c7c25e0241bdac4abdc1d2d4cbca003a5fd500ebff17b6038d7a"
  },
  "id": "D9B8EhvPitmpIY8Z",
  "tags": []
}
