drop extension if exists "pg_net";
create table "public"."video_avatar" (
  "id" bigint generated by default as identity not null,
  "created_at" timestamp with time zone not null default now(),
  "ai_video" text,
  "thumbnail_url" text,
  "video_script" text
);
alter table "public"."video_avatar" enable row level security;
alter table "public"."real_estate_content"
alter column "id" drop default;
alter table "public"."real_estate_content"
alter column "id"
add generated by default as identity;
drop sequence if exists "public"."real_estate_content_id_seq";
CREATE INDEX real_estate_created_at_idx ON public.real_estate_content USING btree (created_at DESC);
CREATE UNIQUE INDEX video_avatar_pkey ON public.video_avatar USING btree (id);
alter table "public"."video_avatar"
add constraint "video_avatar_pkey" PRIMARY KEY using index "video_avatar_pkey";
grant delete on table "public"."real_estate_content" to "anon";
grant insert on table "public"."real_estate_content" to "anon";
grant references on table "public"."real_estate_content" to "anon";
grant select on table "public"."real_estate_content" to "anon";
grant trigger on table "public"."real_estate_content" to "anon";
grant truncate on table "public"."real_estate_content" to "anon";
grant update on table "public"."real_estate_content" to "anon";
grant delete on table "public"."video_avatar" to "anon";
grant insert on table "public"."video_avatar" to "anon";
grant references on table "public"."video_avatar" to "anon";
grant select on table "public"."video_avatar" to "anon";
grant trigger on table "public"."video_avatar" to "anon";
grant truncate on table "public"."video_avatar" to "anon";
grant update on table "public"."video_avatar" to "anon";
grant delete on table "public"."video_avatar" to "authenticated";
grant insert on table "public"."video_avatar" to "authenticated";
grant references on table "public"."video_avatar" to "authenticated";
grant select on table "public"."video_avatar" to "authenticated";
grant trigger on table "public"."video_avatar" to "authenticated";
grant truncate on table "public"."video_avatar" to "authenticated";
grant update on table "public"."video_avatar" to "authenticated";
grant delete on table "public"."video_avatar" to "service_role";
grant insert on table "public"."video_avatar" to "service_role";
grant references on table "public"."video_avatar" to "service_role";
grant select on table "public"."video_avatar" to "service_role";
grant trigger on table "public"."video_avatar" to "service_role";
grant truncate on table "public"."video_avatar" to "service_role";
grant update on table "public"."video_avatar" to "service_role";
create policy "Enable read access for all users UPDATE" on "public"."video_avatar" as permissive for
update to public using (true) with check (true);
create policy "Enable read access for all users" on "public"."video_avatar" as permissive for all to public using (true) with check (true);
