

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."companies" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "brand_name" "text",
    "website" "text",
    "additional_information" "text",
    "target_audience" "text",
    "brand_tone" "text",
    "key_offer" "text"
);


ALTER TABLE "public"."companies" OWNER TO "postgres";


ALTER TABLE "public"."companies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."companies_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."twitter_content" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "idea_id" bigint NOT NULL,
    "content_body" "text",
    "post" boolean
);


ALTER TABLE "public"."twitter_content" OWNER TO "postgres";


ALTER TABLE "public"."twitter_content" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."content_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."ideas" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "header" "text",
    "platforms" "text",
    "description" "text",
    "angle_number" integer,
    "angle_id" bigint,
    "topic1" "text",
    "idea_description1" "text",
    "image_prompt1" "text",
    "topic2" "text",
    "idea_description2" "text",
    "image_prompt2" "text",
    "topic3" "text",
    "idea_description3" "text",
    "image_prompt3" "text",
    "topic4" "text",
    "idea_description4" "text",
    "image_prompt4" "text",
    "topic5" "text",
    "idea_description5" "text",
    "image_prompt5" "text",
    "topic6" "text",
    "idea_description6" "text",
    "image_prompt6" "text",
    "topic7" "text",
    "idea_description7" "text",
    "image_prompt7" "text",
    "topic8" "text",
    "idea_description8" "text",
    "image_prompt8" "text",
    "topic9" "text",
    "idea_description9" "text",
    "image_prompt9" "text",
    "topic10" "text",
    "idea_description10" "text",
    "image_prompt10" "text",
    "strategy_id" bigint NOT NULL,
    "company_id" bigint NOT NULL
);


ALTER TABLE "public"."ideas" OWNER TO "postgres";


ALTER TABLE "public"."ideas" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ideas_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."linkedin_content" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "idea_id" bigint NOT NULL,
    "content_body" "text",
    "post" boolean
);


ALTER TABLE "public"."linkedin_content" OWNER TO "postgres";


COMMENT ON TABLE "public"."linkedin_content" IS 'This is a duplicate of twitter_content';



ALTER TABLE "public"."linkedin_content" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."linkedin_content_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."newsletter_content" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "idea_id" bigint NOT NULL,
    "content_body" "text",
    "post" boolean
);


ALTER TABLE "public"."newsletter_content" OWNER TO "postgres";


COMMENT ON TABLE "public"."newsletter_content" IS 'This is a duplicate of linkedin_content';



ALTER TABLE "public"."newsletter_content" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."newsletter_content_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."real_estate_content" (
    "id" bigint,
    "created_at" timestamp with time zone,
    "link_origin" "text",
    "link_final" "text"
);


ALTER TABLE "public"."real_estate_content" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."strategies" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "platforms" "text",
    "angle1_header" "text",
    "angle1_description" "text",
    "angle1_objective" "text",
    "angle1_tonality" "text",
    "angle2_header" "text",
    "angle2_description" "text",
    "angle2_objective" "text",
    "angle2_tonality" "text",
    "angle3_header" "text",
    "angle3_description" "text",
    "angle3_objective" "text",
    "angle3_tonality" "text",
    "angle4_header" "text",
    "angle4_description" "text",
    "angle4_objective" "text",
    "angle4_tonality" "text",
    "angle5_header" "text",
    "angle5_description" "text",
    "angle5_objective" "text",
    "angle5_tonality" "text",
    "angle6_header" "text",
    "angle6_description" "text",
    "angle6_objective" "text",
    "angle6_tonality" "text",
    "angle7_header" "text",
    "angle7_description" "text",
    "angle7_objective" "text",
    "angle7_tonality" "text",
    "angle8_header" "text",
    "angle8_description" "text",
    "angle8_objective" "text",
    "angle8_tonality" "text",
    "angle9_header" "text",
    "angle9_description" "text",
    "angle9_objective" "text",
    "angle9_tonality" "text",
    "angle10_header" "text",
    "angle10_description" "text",
    "angle10_objective" "text",
    "angle10_tonality" "text",
    "company_id" bigint NOT NULL
);


ALTER TABLE "public"."strategies" OWNER TO "postgres";


ALTER TABLE "public"."strategies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."strategies_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."companies"
    ADD CONSTRAINT "companies_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."twitter_content"
    ADD CONSTRAINT "content_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ideas"
    ADD CONSTRAINT "ideas_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."linkedin_content"
    ADD CONSTRAINT "linkedin_content_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."newsletter_content"
    ADD CONSTRAINT "newsletter_content_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."strategies"
    ADD CONSTRAINT "strategies_pkey" PRIMARY KEY ("id");



CREATE INDEX "idx_ideas_company_id" ON "public"."ideas" USING "btree" ("company_id");



CREATE INDEX "idx_ideas_strategy_id" ON "public"."ideas" USING "btree" ("strategy_id");



CREATE INDEX "idx_linkedin_content_idea_id" ON "public"."linkedin_content" USING "btree" ("idea_id");



CREATE INDEX "idx_newsletter_content_idea_id" ON "public"."newsletter_content" USING "btree" ("idea_id");



CREATE INDEX "idx_strategies_company_id" ON "public"."strategies" USING "btree" ("company_id");



CREATE INDEX "idx_twitter_content_idea_id" ON "public"."twitter_content" USING "btree" ("idea_id");



ALTER TABLE ONLY "public"."ideas"
    ADD CONSTRAINT "ideas_company_id_fkey" FOREIGN KEY ("company_id") REFERENCES "public"."companies"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."ideas"
    ADD CONSTRAINT "ideas_strategy_id_fkey" FOREIGN KEY ("strategy_id") REFERENCES "public"."strategies"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."linkedin_content"
    ADD CONSTRAINT "linkedin_content_idea_id_fkey" FOREIGN KEY ("idea_id") REFERENCES "public"."ideas"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."newsletter_content"
    ADD CONSTRAINT "newsletter_content_idea_id_fkey" FOREIGN KEY ("idea_id") REFERENCES "public"."ideas"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."strategies"
    ADD CONSTRAINT "strategies_company_id_fkey" FOREIGN KEY ("company_id") REFERENCES "public"."companies"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."twitter_content"
    ADD CONSTRAINT "twitter_content_idea_id_fkey" FOREIGN KEY ("idea_id") REFERENCES "public"."ideas"("id") ON DELETE CASCADE;



CREATE POLICY "Enable read access for all" ON "public"."ideas" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."companies" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."linkedin_content" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."newsletter_content" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."real_estate_content" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."strategies" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."twitter_content" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users UPDATE" ON "public"."linkedin_content" FOR UPDATE USING (true);



CREATE POLICY "Enable read access for all users UPDATE" ON "public"."newsletter_content" FOR UPDATE USING (true);



CREATE POLICY "Enable read access for all users for update" ON "public"."ideas" FOR UPDATE USING (true);



CREATE POLICY "Enable read access for all users update" ON "public"."companies" FOR DELETE USING (true);



CREATE POLICY "Enable read access for all users update" ON "public"."real_estate_content" FOR UPDATE USING (true);



CREATE POLICY "Enable read access for all users update" ON "public"."twitter_content" FOR UPDATE USING (true);



CREATE POLICY "Enable update access for all users" ON "public"."strategies" FOR UPDATE USING (true);



ALTER TABLE "public"."companies" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ideas" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."linkedin_content" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."newsletter_content" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."real_estate_content" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."strategies" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."twitter_content" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";








































































































































































GRANT ALL ON TABLE "public"."companies" TO "anon";
GRANT ALL ON TABLE "public"."companies" TO "authenticated";
GRANT ALL ON TABLE "public"."companies" TO "service_role";



GRANT ALL ON SEQUENCE "public"."companies_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."companies_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."companies_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."twitter_content" TO "anon";
GRANT ALL ON TABLE "public"."twitter_content" TO "authenticated";
GRANT ALL ON TABLE "public"."twitter_content" TO "service_role";



GRANT ALL ON SEQUENCE "public"."content_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."content_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."content_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ideas" TO "anon";
GRANT ALL ON TABLE "public"."ideas" TO "authenticated";
GRANT ALL ON TABLE "public"."ideas" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ideas_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ideas_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ideas_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."linkedin_content" TO "anon";
GRANT ALL ON TABLE "public"."linkedin_content" TO "authenticated";
GRANT ALL ON TABLE "public"."linkedin_content" TO "service_role";



GRANT ALL ON SEQUENCE "public"."linkedin_content_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."linkedin_content_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."linkedin_content_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."newsletter_content" TO "anon";
GRANT ALL ON TABLE "public"."newsletter_content" TO "authenticated";
GRANT ALL ON TABLE "public"."newsletter_content" TO "service_role";



GRANT ALL ON SEQUENCE "public"."newsletter_content_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."newsletter_content_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."newsletter_content_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."real_estate_content" TO "anon";
GRANT ALL ON TABLE "public"."real_estate_content" TO "authenticated";
GRANT ALL ON TABLE "public"."real_estate_content" TO "service_role";



GRANT ALL ON TABLE "public"."strategies" TO "anon";
GRANT ALL ON TABLE "public"."strategies" TO "authenticated";
GRANT ALL ON TABLE "public"."strategies" TO "service_role";



GRANT ALL ON SEQUENCE "public"."strategies_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."strategies_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."strategies_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;
